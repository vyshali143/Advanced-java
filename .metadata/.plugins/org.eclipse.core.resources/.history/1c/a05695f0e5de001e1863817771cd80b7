
package com.sathya.propro;

import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.Base64;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import org.apache.commons.io.IOUtils;

@WebServlet("/UpdateProductServlet")
public class UpdateProductServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private Product product;
	
    public UpdateProductServlet() {
        super();
    }
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String proId=request.getParameter("proId");
		String updatedproName=request.getParameter("ProName");
		
		double updatedproPrice=Double.parseDouble(request.getParameter("proPrice"));
		String updatedproBrand=request.getParameter("proBrand");
		
		String updatedproMadeIn=request.getParameter("proMadeIn");
		Date updatedManufacture=Date.valueOf(request.getParameter("Manufacture"));
		Date updatedExpire=Date.valueOf(request.getParameter("Expiry"));
		
		Part part1=request.getPart("proImage");
		InputStream inputStream1 =part1.getInputStream();
		byte[] updatedProImage=IOUtils.toByteArray(inputStream1);
				
				Part part2=request.getPart("proAudio");
        InputStream inputStream2 =part2.getInputStream();
		byte[] proAudio=IOUtils.toByteArray(inputStream2);
		
		Part part3=request.getPart("proVideo");
        InputStream inputSream3 =part3.getInputStream();
	
	//conversion of InputStream into byte[]
	byte[] proVideo=IOUtils.toByteArray(inputSream3);
		
		
		Product pro=new Product();
		pro.setProId(proId);
		pro.setProName(updatedproName);
		pro.setProPrice(updatedproPrice);
		pro.setProBrand(updatedproBrand);
		pro.setProMadeIn(updatedproMadeIn);
		pro.setManufacture(updatedManufacture);
		pro.setExpiry(updatedExpire);
		
		pro.setProAudio(updatedproAudio);
		pro.setProVideo(updatedproVideo);
		
		
		
		Part filePart=request.getPart("newProImage");//new page is the name of your file input field
		if(filePart !=null && filePart.getSize()>0) {
			InputStream inputStream=filePart.getInputStream();
			byte[] newProImageData =IOUtils.toByteArray(inputStream);
			product.setProImage(newProImageData);
		}
		else 
		{
			String s=request.getParameter("existingProImage");
			byte[] existingImage =Base64.getDecoder().decode(s);
			
			product.setProImage(existingProImage);
		}
		
		Part filePart1=request.getPart("newProAudio");//new page is the name of your file input field
		if(filePart1 !=null && filePart1.getSize()>0) {
			InputStream inputStream=filePart1.getInputStream();
			byte[] newAudioData =IOUtils.toByteArray(inputStream);
			product.setProImage(newAudioData);
		}
		else 
		{
			String s=request.getParameter("existingAudio");
			byte[] existingAudio =Base64.getDecoder().decode(s);
			
			product.setProImage(existingAudio);
		}
		
		Part filePart=request.getPart("newImage");//new page is the name of your file input field
		if(filePart !=null && filePart.getSize()>0) {
			InputStream inputStream=filePart.getInputStream();
			byte[] newImageData =IOUtils.toByteArray(inputStream);
			product.setProImage(newImageData);
		}
		else 
		{
			String s=request.getParameter("existingImage");
			byte[] existingImage =Base64.getDecoder().decode(s);
			
			product.setProImage(existingImage);
		}
		ProductDao dao=new ProductDao();
		int result =dao.UpdateById(product);
		
		if(result==1)
		{
			RequestDispatcher dsp=request.getRequestDispatcher("EditProductt");
			dsp.forward(request,response);
		}
		else {
			response.setContentType("text/html");
			PrintWriter writer=response.getWriter();
			writer.println("Data Updation failed check once...........");
			
			RequestDispatcher dsp=request.getRequestDispatcher("EditProductt.jsp");
			dsp.include(request,response);
			
		}
		
	}

}
